apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    defaultConfig {
        applicationId 'com.martonvago.archelon'
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'com.martonvago.archelon.CustomTestRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    hilt {
        enableTransformForLocalTests = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        animationsDisabled = true

        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        androidTest {
            java.srcDirs += 'src/sharedTest/java'
        }
        test {
            java.srcDirs += 'src/sharedTest/java'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"
    implementation "com.google.android.material:material:$material_version"

    // Core
    implementation "androidx.core:core-ktx:$core_version"
    androidTestImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"

    // Fragment
    debugImplementation("androidx.fragment:fragment-testing:$fragment_version") {
        // Exclude conflicting transitive dependency
        exclude group: 'androidx.test', module: 'core'
    }

    // Coroutines
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$androidx_hilt_version"
    kapt "androidx.hilt:hilt-compiler:$androidx_hilt_version"

    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // ThreeTenABP
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabp_version"
    androidTestImplementation("org.threeten:threetenbp:$threetenbp_version") {
        // https://github.com/JakeWharton/ThreeTenABP/issues/14
        exclude group: 'com.jakewharton.threetenabp', module:'threetenabp'
    }
    testImplementation("org.threeten:threetenbp:$threetenbp_version") {
        exclude group: 'com.jakewharton.threetenabp', module:'threetenabp'
    }

    // JUnit 4
    testImplementation "junit:junit:$junit4_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit4_version"

    // MockK
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    testImplementation "io.mockk:mockk:$mockk_version"

    // Roboelectric
    testImplementation "org.robolectric:robolectric:$roboelectric_version"

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"

    // Truth
    androidTestImplementation("com.google.truth:truth:$truth_version") {
        // Exclude conflicting transitive dependency
        exclude group: "com.google.code.findbugs", module: "jsr305"
    }
    testImplementation("com.google.truth:truth:$truth_version") {
        exclude group: "com.google.code.findbugs", module: "jsr305"
    }
}
